;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;char keypad();
;void ChangePasswordUser();
;void ChangePasswordAdmin();
;void EE_Write(unsigned int add, unsigned char data);
;unsigned char EE_Read(unsigned int add);
;void initializeEEPROM()
; 0000 001E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001F // Function to initialize EEPROM with default values
; 0000 0020 // Default passwords
; 0000 0021 unsigned int defaultPassword1 = 203;
; 0000 0022 unsigned int defaultPassword2 = 129;
; 0000 0023 unsigned int defaultPassword3 = 700;
; 0000 0024 unsigned int defaultPassword4 = 426;
; 0000 0025 unsigned int defaultPassword5 = 79;
; 0000 0026 // Writing default passwords to specific EEPROM addresses
; 0000 0027 EE_Write(111, defaultPassword1 % 255);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;	defaultPassword1 -> R16,R17
;	defaultPassword2 -> R18,R19
;	defaultPassword3 -> R20,R21
;	defaultPassword4 -> Y+8
;	defaultPassword5 -> Y+6
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0028 EE_Write(112, defaultPassword1 / 255);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0029 EE_Write(126, defaultPassword2 % 255);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 002A EE_Write(127, defaultPassword2 / 255);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 002B EE_Write(128, defaultPassword3 % 255);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 002C EE_Write(129, defaultPassword3 / 255);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 002D EE_Write(130, defaultPassword4 % 255);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 002E EE_Write(131, defaultPassword4 / 255);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 002F EE_Write(132, defaultPassword5 % 255);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0030 EE_Write(133, defaultPassword5 / 255);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0031 // Add more passwords if needed
; 0000 0032 }
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;void main(void)
; 0000 0035 {
;PCODE: $00000069 VOL: 0
; 0000 0036 // Setting Port C for keypad input and output configurations
; 0000 0037 DDRC = 0b00000111; // 1 pin unused, 4 rows (input), 3 columns (output)
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0038 // Setting internal pull-up resistances for keypad pins
; 0000 0039 PORTC = 0b11111000; // pull-up  resistance  to avoid floating  for keypad
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 003A // Setting direction and initial state for different pins on Port D
; 0000 003B DDRD.2 = 0;      // Configuring INT0 (Admin) as input
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 003C PORTD.2 = 1;    // Enabling pull-up resistor for INT0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 003D DDRD.3 = 0;     // Configuring INT1 (Set PC for user) as input
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 003E PORTD.3 = 1;    // Enabling pull-up resistor for INT1
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 003F DDRD.1 = 1;    // Configuring Motor pin as output
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0040 PORTD.1 = 0;   // Setting Motor pin to LOW initially
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0041 DDRD.5 = 1;   // Configuring Alarm pin as output
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0042 PORTD.5 = 0;  // Setting Alarm pin to LOW initially
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0043 // Setting up External Interrupt 0 (INT0)
; 0000 0044 bit_set(MCUCR, 1);  //MCUCR |= (1<<1)
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0045 bit_clr(MCUCR, 0);  //MCUCR &= ~(1<<0)
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0046 // Setting up External Interrupt 1 (INT1)
; 0000 0047 bit_set(MCUCR, 3);
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0048 bit_clr(MCUCR, 2);
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0049 #asm("sei");      // Set Enable Interrupt (Global Interrupt Enable)
;PCODE: $0000008A VOL: 0
; 0000 004A bit_set(GICR, 6);  // Enable external interrupt 0 (INT0)
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 004B bit_set(GICR, 7);   // Enable external interrupt 1 (INT1)
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 004C lcd_init(16);      // Important to initialize the LCD, Give it the number of characters per line
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 004D initializeEEPROM(); // Initialize EEPROM with default values  (call only once for  initializing)
;PCODE: $00000093 VOL: 0
; 0000 004E while (1)
;PCODE: $00000094 VOL: 0
; 0000 004F {
; 0000 0050 // Application code loop
; 0000 0051 //Please write your application code here
; 0000 0052 
; 0000 0053 // Display message prompting for '*' key entry
; 0000 0054 lcd_clear();
;PCODE: $00000095 VOL: 0
; 0000 0055 lcd_printf("Press * to enter");
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0056 // Wait until '*' key is pressed
; 0000 0057 while (keypad() != 10);
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0058 lcd_clear();
;PCODE: $000000A3 VOL: 0
; 0000 0059 // Clear LCD and display "Entered ID:"
; 0000 005A lcd_printf("Entered ID:");
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 005B // Reading ID digits from keypad input
; 0000 005C id1 = keypad();
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 005D id2 = keypad();
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 005E id3 = keypad();
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 005F enteredID = id3 + (id2 * 10) + (id1 * 100);
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0060 lcd_gotoxy(0, 1);
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 0061 // Display entered ID on the LCD
; 0000 0062 lcd_printf("%u", enteredID);
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0063 delay_ms(1000);
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0064 //lcd_clear();
; 0000 0065 // Check entered ID and process accordingly
; 0000 0066 // Check if the enteredID matches predefined IDs
; 0000 0067 if (enteredID == 111 || enteredID == 126 || enteredID == 128 || enteredID == 130 || enteredID == 132 )    // enteredID == 111 || enteredID == 222 || enteredID == 333 || enteredID == 444 || enteredID == 555
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0068 {
; 0000 0069 // Clear the LCD and prompt for password entry
; 0000 006A lcd_clear();
;PCODE: $000000E0 VOL: 0
; 0000 006B lcd_printf("Enter Password:\n");
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 006C lcd_gotoxy(0, 1);
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 006D // Read the three digits of the password from the keypad
; 0000 006E pass1 = keypad();
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 006F pass2 = keypad();
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0070 pass3 = keypad();
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 0071 // Combine the entered password digits into a single password value
; 0000 0072 password = (pass1 * 100) + (pass2 * 10) + (pass3 * 1);
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0073 lcd_printf("%u", password);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0074 // Retrieve stored password from EEPROM based on enteredID
; 0000 0075 storedPassword = EE_Read(enteredID);
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 0076 storedPassword = storedPassword + (EE_Read(enteredID + 1) * 255);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 0077 //lcd_printf("%u", storedPassword);
; 0000 0078 delay_ms(1000);
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 0079 // Check if the entered password matches the stored password for a specific enteredID
; 0000 007A if (password == storedPassword && enteredID == 111)
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 007B {
; 0000 007C // Display admin authentication message
; 0000 007D lcd_clear();
;PCODE: $00000124 VOL: 0
; 0000 007E lcd_printf("You are Admin");
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 007F delay_ms(1000);
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 0080 lcd_clear();
;PCODE: $0000012E VOL: 0
; 0000 0081 lcd_gotoxy(5, 0);
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 0082 // (Code for displaying admin welcome message and actions)
; 0000 0083 lcd_printf("Welcome!");
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 0084 lcd_gotoxy(7, 1);
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 0085 lcd_printf("Prof");
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 0086 delay_ms(1000);
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 0087 lcd_clear();
;PCODE: $00000147 VOL: 0
; 0000 0088 PORTD.1 = 1;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 0089 lcd_printf("Door is opening");
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 008A lcd_gotoxy(0, 1);
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 008B lcd_clear();
;PCODE: $00000155 VOL: 0
; 0000 008C lcd_printf("Press * to enter");
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 008D lcd_gotoxy(0, 1);
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 008E lcd_printf("Press # to Exit");
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 008F delay_ms(1000);
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 0090 if(  keypad() == 10){
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 0091 
; 0000 0092 lcd_clear();
;PCODE: $0000016D VOL: 0
; 0000 0093 ChangePasswordAdmin();
;PCODE: $0000016E VOL: 0
; 0000 0094 } else{
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 0095 lcd_clear();
;PCODE: $00000171 VOL: 0
; 0000 0096 PORTD.1 = 0;
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 0097 continue;
;PCODE: $00000174 VOL: 0
; 0000 0098 }
;PCODE: $00000175 VOL: 0
; 0000 0099 }
; 0000 009A else if (password == storedPassword && enteredID == 126)
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 009B {
; 0000 009C // Display user authentication message for ID 126
; 0000 009D lcd_clear();
;PCODE: $00000182 VOL: 0
; 0000 009E lcd_gotoxy(5, 0);
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 009F // (Code for displaying user welcome message and actions for ID 126)
; 0000 00A0 lcd_printf("Welcome!");
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00A1 lcd_gotoxy(7, 1);
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00A2 lcd_printf("Mina");
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 00A3 delay_ms(1000);
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 00A4 lcd_clear();
;PCODE: $0000019B VOL: 0
; 0000 00A5 lcd_printf("Door is opening");
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 00A6 PORTD.1 = 1;
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 00A7 lcd_clear();
;PCODE: $000001A5 VOL: 0
; 0000 00A8 lcd_printf("Press * to enter");
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 00A9 lcd_gotoxy(0, 1);
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 00AA lcd_printf("Press # to Exit");
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 00AB delay_ms(1000);
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 00AC if(  keypad() == 10){
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00AD lcd_clear();
;PCODE: $000001BD VOL: 0
; 0000 00AE ChangePasswordUser()  ;
;PCODE: $000001BE VOL: 0
; 0000 00AF 
; 0000 00B0 } else{
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0000 00B1 lcd_clear();
;PCODE: $000001C1 VOL: 0
; 0000 00B2 PORTD.1 = 0;
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 00B3 continue;
;PCODE: $000001C4 VOL: 0
; 0000 00B4 }
;PCODE: $000001C5 VOL: 0
; 0000 00B5 }
; 0000 00B6 else if (password == storedPassword && enteredID == 128)
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 00B7 {
; 0000 00B8 lcd_clear();
;PCODE: $000001D2 VOL: 0
; 0000 00B9 lcd_gotoxy(5, 0);
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0000 00BA lcd_printf("Welcome!");
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 00BB lcd_gotoxy(7, 1);
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 00BC lcd_printf("Abdo");
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 00BD delay_ms(1000);
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 00BE lcd_clear();
;PCODE: $000001EB VOL: 0
; 0000 00BF lcd_printf("Door is opening");
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 00C0 PORTD.1 = 1;
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 00C1 lcd_clear();
;PCODE: $000001F5 VOL: 0
; 0000 00C2 lcd_printf("Press * to enter");
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 00C3 lcd_gotoxy(0, 1);
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 00C4 lcd_printf("Press # to Exit");
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 00C5 delay_ms(1000);
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 00C6 if(  keypad() == 10){
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 00C7 lcd_clear();
;PCODE: $0000020D VOL: 0
; 0000 00C8 ChangePasswordUser()  ;
;PCODE: $0000020E VOL: 0
; 0000 00C9 
; 0000 00CA } else{
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
; 0000 00CB lcd_clear();
;PCODE: $00000211 VOL: 0
; 0000 00CC PORTD.1 = 0;
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 00CD continue;
;PCODE: $00000214 VOL: 0
; 0000 00CE }
;PCODE: $00000215 VOL: 0
; 0000 00CF }
; 0000 00D0 else if (password == storedPassword && enteredID == 130)
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 00D1 {
; 0000 00D2 lcd_clear();
;PCODE: $00000222 VOL: 0
; 0000 00D3 lcd_gotoxy(5, 0);
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 00D4 lcd_printf("Welcome!");
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 00D5 lcd_gotoxy(7, 1);
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 00D6 lcd_printf("Salah");
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 00D7 delay_ms(1000);
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 00D8 lcd_clear();
;PCODE: $0000023B VOL: 0
; 0000 00D9 lcd_printf("Door is opening");
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
; 0000 00DA 
; 0000 00DB PORTD.1 = 1;
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 00DC lcd_clear();
;PCODE: $00000245 VOL: 0
; 0000 00DD lcd_printf("Press * to enter");
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 00DE lcd_gotoxy(0, 1);
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0000 00DF lcd_printf("Press # to Exit");
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 00E0 delay_ms(1000);
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
; 0000 00E1 if(  keypad() == 10){
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
; 0000 00E2 lcd_clear();
;PCODE: $0000025D VOL: 0
; 0000 00E3 ChangePasswordUser()  ;
;PCODE: $0000025E VOL: 0
; 0000 00E4 
; 0000 00E5 } else{
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 00E6 lcd_clear();
;PCODE: $00000261 VOL: 0
; 0000 00E7 PORTD.1 = 0;
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 00E8 continue;
;PCODE: $00000264 VOL: 0
; 0000 00E9 }
;PCODE: $00000265 VOL: 0
; 0000 00EA }
; 0000 00EB else if (password == storedPassword && enteredID == 132)
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 00EC {
; 0000 00ED lcd_clear();
;PCODE: $00000272 VOL: 0
; 0000 00EE lcd_gotoxy(5, 0);
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 00EF lcd_printf("Welcome!");
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 00F0 lcd_gotoxy(7, 1);
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 00F1 lcd_printf("Zaki");
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0000 00F2 delay_ms(1000);
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
; 0000 00F3 lcd_clear();
;PCODE: $0000028B VOL: 0
; 0000 00F4 lcd_printf("Door is opening");
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
; 0000 00F5 PORTD.1 = 1;
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
; 0000 00F6 lcd_clear();
;PCODE: $00000295 VOL: 0
; 0000 00F7 lcd_printf("Press * to enter");
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
; 0000 00F8 lcd_gotoxy(0, 1);
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 00F9 lcd_printf("Press # to Exit");
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
; 0000 00FA delay_ms(1000);
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
; 0000 00FB if(  keypad() == 10){
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
; 0000 00FC lcd_clear();
;PCODE: $000002AD VOL: 0
; 0000 00FD ChangePasswordUser()  ;
;PCODE: $000002AE VOL: 0
; 0000 00FE 
; 0000 00FF } else{
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 0100 lcd_clear();
;PCODE: $000002B1 VOL: 0
; 0000 0101 PORTD.1 = 0;
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
; 0000 0102 continue;
;PCODE: $000002B4 VOL: 0
; 0000 0103 }
;PCODE: $000002B5 VOL: 0
; 0000 0104 }
; 0000 0105 else
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0000 0106 {
; 0000 0107 lcd_clear();
;PCODE: $000002B8 VOL: 0
; 0000 0108 lcd_printf("Wrong password");
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
; 0000 0109 // Activate alarm
; 0000 010A PORTD.5 = 1;
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
; 0000 010B delay_ms(1000);// Wait for 1 second
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 010C PORTD.5 = 0;
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
; 0000 010D continue;   // Restart the loop to re-enter a valid password
;PCODE: $000002C6 VOL: 0
; 0000 010E }
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 010F }
; 0000 0110 else
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
; 0000 0111 {
; 0000 0112 // Handling the case of an invalid ID
; 0000 0113 lcd_clear();
;PCODE: $000002CE VOL: 0
; 0000 0114 lcd_printf("Invalid ID");
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
; 0000 0115 // Activate alarm in a specific pattern
; 0000 0116 // (Code for activating alarm for an invalid ID)
; 0000 0117 PORTD.5 = 1;
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
; 0000 0118 delay_ms(1000); // Wait for 1 second
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
; 0000 0119 PORTD.5 = 0;
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0000 011A delay_ms(1000);
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
; 0000 011B PORTD.5 = 1;
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
; 0000 011C delay_ms(1000); // Wait for 1 second
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
; 0000 011D PORTD.5 = 0;
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
; 0000 011E delay_ms(1000);
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
; 0000 011F continue;       // Restart the loop to re-enter a valid ID
;PCODE: $000002E6 VOL: 0
; 0000 0120 }
;PCODE: $000002E7 VOL: 0
; 0000 0121 
; 0000 0122 
; 0000 0123 }
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
; 0000 0124 
; 0000 0125 
; 0000 0126 }
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;char keypad()
; 0000 0129 {
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 012A while (1)  // Infinite loop to continuously check keypad input
;PCODE: $000002EF VOL: 0
; 0000 012B {
; 0000 012C // Activate column 1 and deactivate other columns
; 0000 012D PORTC.0 = 0; // column 1 is activated by 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
; 0000 012E PORTC.1 = 1; // column 2 is inactive by 1
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 012F PORTC.2 = 1; // column 3 is inactive by 1
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
; 0000 0130 // Switch case to check the row values based on the pressed key in column 1
; 0000 0131 switch (PINC)
;PCODE: $000002F6 VOL: 0
; 0000 0132 {
; 0000 0133 // Check for specific row combinations in column 1
; 0000 0134 // 0bxrrrrccc
; 0000 0135 case 0b11110110:  // If row combination matches, indicating a keypress
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
; 0000 0136 while (PINC.3 == 0);// Wait for key release
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
; 0000 0137 return 1;  // Return the value 1 corresponding to the pressed key
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
; 0000 0138 break;     // Exit the switch case
;PCODE: $00000301 VOL: 0
; 0000 0139 case 0b11101110:
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
; 0000 013A while (PINC.4 == 0);
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
; 0000 013B return 4;
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
; 0000 013C break;
;PCODE: $0000030D VOL: 0
; 0000 013D case 0b11011110:
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
; 0000 013E while (PINC.5 == 0);
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
; 0000 013F return 7;
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
; 0000 0140 break;
;PCODE: $00000319 VOL: 0
; 0000 0141 case 0b10111110:
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
; 0000 0142 while (PINC.6 == 0);
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
; 0000 0143 return 10; // '*' corresponds to number 10
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
; 0000 0144 break;
;PCODE: $00000325 VOL: 0
; 0000 0145 }
;PCODE: $00000326 VOL: 0
; 0000 0146 // Deactivate column 1 and activate column 2
; 0000 0147 PORTC.0 = 1; // column 1 is inactive by 1
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
; 0000 0148 PORTC.1 = 0; // column 2 is activated by 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
; 0000 0149 PORTC.2 = 1; // column 3 is inactive by 1
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
; 0000 014A switch (PINC)
;PCODE: $0000032D VOL: 0
; 0000 014B {
; 0000 014C // 0bxrrrrccc
; 0000 014D case 0b11110101:
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
; 0000 014E while (PINC.3 == 0);
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
; 0000 014F return 2;
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
; 0000 0150 break;
;PCODE: $00000338 VOL: 0
; 0000 0151 case 0b11101101:
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
; 0000 0152 while (PINC.4 == 0);
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
; 0000 0153 return 5;
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
; 0000 0154 break;
;PCODE: $00000344 VOL: 0
; 0000 0155 case 0b11011101:
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
; 0000 0156 while (PINC.5 == 0);
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
; 0000 0157 return 8;
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
; 0000 0158 break;
;PCODE: $00000350 VOL: 0
; 0000 0159 case 0b10111101:
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
; 0000 015A while (PINC.6 == 0);
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
; 0000 015B return 0;
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
; 0000 015C break;
;PCODE: $0000035C VOL: 0
; 0000 015D }
;PCODE: $0000035D VOL: 0
; 0000 015E // Deactivate column 2 and activate column 3
; 0000 015F PORTC.0 = 1; // column 1 is inactive by 1
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
; 0000 0160 PORTC.1 = 1; // column 2 is inactive by 1
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
; 0000 0161 PORTC.2 = 0; // column 3 is activated by 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
; 0000 0162 switch (PINC)
;PCODE: $00000364 VOL: 0
; 0000 0163 {
; 0000 0164 // 0bxrrrrccc
; 0000 0165 case 0b11110011:
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
; 0000 0166 while (PINC.3 == 0);
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
; 0000 0167 return 3;
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
; 0000 0168 break;
;PCODE: $0000036F VOL: 0
; 0000 0169 case 0b11101011:
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
; 0000 016A while (PINC.4 == 0);
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
; 0000 016B return 6;
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
; 0000 016C break;
;PCODE: $0000037B VOL: 0
; 0000 016D case 0b11011011:
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
; 0000 016E while (PINC.5 == 0);
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
; 0000 016F return 9;
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
; 0000 0170 break;
;PCODE: $00000387 VOL: 0
; 0000 0171 case 0b10111011:
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
; 0000 0172 while (PINC.6 == 0);
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
; 0000 0173 return 11;
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
; 0000 0174 break;
;PCODE: $00000393 VOL: 0
; 0000 0175 }
;PCODE: $00000394 VOL: 0
; 0000 0176 }
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
; 0000 0177 }
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;unsigned char EE_Read(unsigned int add)
; 0000 017A {
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
; 0000 017B while(EECR.1 == 1);    //Wait till EEPROM is ready
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;	add -> R16,R17
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
; 0000 017C EEAR = add;        //Prepare the address you want to read from
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
; 0000 017D 
; 0000 017E EECR.0 = 1;            //Execute read command
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
; 0000 017F 
; 0000 0180 return EEDR;   // Return the data read from the EEPROM
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
; 0000 0181 
; 0000 0182 }
;PCODE: $000003AB VOL: 0
;void EE_Write(unsigned int add, unsigned char data)
; 0000 0185 {
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
; 0000 0186 while(EECR.1 == 1);    //Wait till EEPROM is ready
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;	add -> R18,R19
;	data -> R17
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
; 0000 0187 EEAR = add;        //Prepare the address you want to read from
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
; 0000 0188 EEDR = data;           //Prepare the data you want to write in the address above
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
; 0000 0189 EECR.2 = 1;            //Master write enable
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
; 0000 018A EECR.1 = 1;            //Write Enable
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
; 0000 018B 
; 0000 018C }
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;void ChangePasswordUser()
; 0000 018F {
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
; 0000 0190 lcd_clear();  // Clear the LCD display
;PCODE: $000003C6 VOL: 0
; 0000 0191 lcd_printf("Enter_ID");  // Display "Enter_ID" on the LCD
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
; 0000 0192 NewID = (keypad() * 100) + (keypad() * 10) + keypad();  // Collect a new ID from the keypad
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
; 0000 0193 lcd_gotoxy(0, 1);  // Set cursor to the second line of the LCD
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
; 0000 0194 lcd_printf("%u", NewID);  // Display the entered ID on the LCD
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
; 0000 0195 delay_ms(1000);  // Delay for 1 second
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 0196 
; 0000 0197 if (NewID == 126 || NewID == 128 || NewID == 130 || NewID == 132) {  // Check if the entered ID is valid
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
; 0000 0198 lcd_clear();  // Clear the LCD display
;PCODE: $000003FB VOL: 0
; 0000 0199 lcd_printf("Enter Old-PC");  // Display "Enter Old-PC" on the LCD
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
; 0000 019A lcd_gotoxy(0, 1);  // Set cursor to the second line of the LCD
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
; 0000 019B OldPassword = 0;  // Initialize the variable for the old password
;PCODE: $00000407 VOL: 0
; 0000 019C OldPassword = (keypad() * 100) + (keypad() * 10) + keypad();  // Collect the old password from the keypad
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
; 0000 019D storedPassword = EE_Read(NewID);  // Read the stored password from EEPROM at the given ID
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
; 0000 019E storedPassword = storedPassword + (EE_Read(NewID + 1) * 255);  // Read the second byte of the stored password
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
; 0000 019F lcd_printf("%u", OldPassword);  // Display the entered old password on the LCD
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
; 0000 01A0 delay_ms(1000);  // Delay for 1 second
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
; 0000 01A1 
; 0000 01A2 if (OldPassword == storedPassword) {  // Check if the entered old password matches the stored one
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
; 0000 01A3 // Prompt to enter the new password
; 0000 01A4 lcd_clear();
;PCODE: $00000431 VOL: 0
; 0000 01A5 lcd_printf("Enter New-PC");
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
; 0000 01A6 lcd_gotoxy(0, 1);
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
; 0000 01A7 
; 0000 01A8 NewPassword = (keypad() * 100) + (keypad() * 10) + keypad();  // Collect the new password from the keypad
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
; 0000 01A9 lcd_printf("%u", NewPassword);  // Display the entered new password on the LCD
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
; 0000 01AA delay_ms(1000);  // Delay for 1 second
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
; 0000 01AB 
; 0000 01AC lcd_clear();  // Clear the LCD display
;PCODE: $00000458 VOL: 0
; 0000 01AD lcd_printf("Re-enter PC");  // Prompt to re-enter the new password
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
; 0000 01AE lcd_gotoxy(0, 1);
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
; 0000 01AF 
; 0000 01B0 ReenterNewPassword = (keypad() * 100) + (keypad() * 10) + keypad();  // Collect the re-entered new password
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
; 0000 01B1 lcd_printf("%u", ReenterNewPassword);  // Display the re-entered new password on the LCD
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
; 0000 01B2 delay_ms(1000);  // Delay for 1 second
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
; 0000 01B3 
; 0000 01B4 if (ReenterNewPassword == NewPassword) {  // Check if the re-entered new password matches the new password
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
; 0000 01B5 lcd_clear();  // Clear the LCD display
;PCODE: $00000482 VOL: 0
; 0000 01B6 // Write the new password to EEPROM
; 0000 01B7 EE_Write(NewID, NewPassword % 255);
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
; 0000 01B8 EE_Write(NewID + 1, NewPassword / 255);
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
; 0000 01B9 lcd_printf("Change");  // Display "Change" on the LCD
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
; 0000 01BA lcd_gotoxy(0, 1);
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
; 0000 01BB lcd_printf("Successfully");  // Display "Successfully" on the LCD
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
; 0000 01BC delay_ms(1000);  // Delay for 1 second
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
; 0000 01BD lcd_clear();  // Clear the LCD display
;PCODE: $000004A6 VOL: 0
; 0000 01BE lcd_printf("Press * to enter");  // Prompt to press '*' to enter
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
; 0000 01BF } else {
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
; 0000 01C0 lcd_clear();  // Clear the LCD display
;PCODE: $000004B0 VOL: 0
; 0000 01C1 lcd_printf("Wrong password");  // Display "Wrong password" on the LCD
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
; 0000 01C2 delay_ms(1000);  // Delay for 1 second
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
; 0000 01C3 PORTD.5 = 1;  // Activate alarm
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
; 0000 01C4 delay_ms(1000);
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
; 0000 01C5 PORTD.5 = 0;  // Deactivate alarm
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
; 0000 01C6 delay_ms(1000);
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
; 0000 01C7 lcd_clear();  // Clear the LCD display
;PCODE: $000004C2 VOL: 0
; 0000 01C8 lcd_printf("Press * to enter");  // Prompt to press '*' to enter
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
; 0000 01C9 delay_ms(1000);  // Delay for 1 second
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
; 0000 01CA }
;PCODE: $000004CC VOL: 0
; 0000 01CB } else {
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
; 0000 01CC lcd_clear();  // Clear the LCD display
;PCODE: $000004CF VOL: 0
; 0000 01CD lcd_printf("Wrong password");  // Display "Wrong password" on the LCD
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
; 0000 01CE delay_ms(1000);  // Delay for 1 second
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
; 0000 01CF PORTD.5 = 1;  // Activate alarm
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
; 0000 01D0 delay_ms(1000);
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
; 0000 01D1 PORTD.5 = 0;  // Deactivate alarm
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
; 0000 01D2 delay_ms(1000);
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
; 0000 01D3 lcd_clear();  // Clear the LCD display
;PCODE: $000004E1 VOL: 0
; 0000 01D4 lcd_printf("Press * to enter");  // Prompt to press '*' to enter
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
; 0000 01D5 delay_ms(1000);  // Delay for 1 second
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
; 0000 01D6 }
;PCODE: $000004EB VOL: 0
; 0000 01D7 } else {
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
; 0000 01D8 lcd_clear();  // Clear the LCD display
;PCODE: $000004EE VOL: 0
; 0000 01D9 lcd_printf("Invalid ID");  // Display "Invalid ID" on the LCD
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
; 0000 01DA PORTD.5 = 1;  // Activate alarm
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
; 0000 01DB delay_ms(1000);  // Delay for 1 second
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
; 0000 01DC PORTD.5 = 0;  // Deactivate alarm
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
; 0000 01DD delay_ms(1000);  // Delay for 1 second
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
; 0000 01DE PORTD.5 = 1;  // Activate alarm
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
; 0000 01DF delay_ms(1000);  // Delay for 1 second
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
; 0000 01E0 PORTD.5 = 0;  // Deactivate alarm
;PCODE: $00000502 VOL: 0
;PCODE: $00000503 VOL: 0
; 0000 01E1 delay_ms(1000);  // Delay for 1 second
;PCODE: $00000504 VOL: 0
;PCODE: $00000505 VOL: 0
; 0000 01E2 lcd_clear();  // Clear the LCD display
;PCODE: $00000506 VOL: 0
; 0000 01E3 lcd_printf("Press * to enter");  // Prompt to press '*' to enter
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
; 0000 01E4 delay_ms(1000);  // Delay for 1 second
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
; 0000 01E5 }
;PCODE: $00000510 VOL: 0
; 0000 01E6 }
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
;void ChangePasswordAdmin()
; 0000 01E9 {
;PCODE: $00000513 VOL: 0
;PCODE: $00000514 VOL: 0
; 0000 01EA lcd_clear();  // Clear the LCD display
;PCODE: $00000515 VOL: 0
; 0000 01EB lcd_printf("You are Admin");  // Display "You are Admin" on the LCD
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
; 0000 01EC delay_ms(1000);  // Delay for 1 second
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
; 0000 01ED lcd_clear();  // Clear the LCD display
;PCODE: $0000051F VOL: 0
; 0000 01EE lcd_printf("Enter PC: ");  // Prompt to enter the password
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
; 0000 01EF lcd_gotoxy(0, 1);  // Set cursor to the second line of the LCD
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
; 0000 01F0 OldPassword = (keypad() * 100) + (keypad() * 10) + keypad();  // Collect the entered password
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
; 0000 01F1 storedPassword = EE_Read(111);  // Read the stored password for Admin from EEPROM
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
; 0000 01F2 storedPassword = storedPassword + (EE_Read(112) * 255);  // Read the second byte of the stored password
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 0
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
; 0000 01F3 lcd_printf("%u", OldPassword);  // Display the entered password on the LCD
;PCODE: $00000546 VOL: 0
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
;PCODE: $00000549 VOL: 0
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
; 0000 01F4 delay_ms(1000);  // Delay for 1 second
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
; 0000 01F5 
; 0000 01F6 if (storedPassword == OldPassword) {  // Check if the entered password matches the stored Admin password
;PCODE: $00000552 VOL: 0
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
; 0000 01F7 lcd_clear();  // Clear the LCD display
;PCODE: $00000555 VOL: 0
; 0000 01F8 lcd_printf("Entered ID:");  // Prompt to enter the ID
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
;PCODE: $0000055C VOL: 0
; 0000 01F9 lcd_gotoxy(0, 1);  // Set cursor to the second line of the LCD
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
; 0000 01FA id1 = keypad();  // Read the first digit of the ID
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
; 0000 01FB id2 = keypad();  // Read the second digit of the ID
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
;PCODE: $00000566 VOL: 0
; 0000 01FC id3 = keypad();  // Read the third digit of the ID
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
; 0000 01FD NewID = id3 + (id2 * 10) + (id1 * 100);  // Calculate the new ID from the entered digits
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
;PCODE: $0000056E VOL: 0
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
; 0000 01FE 
; 0000 01FF if (NewID == 111 || NewID == 126 || NewID == 128 || NewID == 130 || NewID == 132) {  // Check if the new ID is valid
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 0
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
;PCODE: $0000057B VOL: 0
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
; 0000 0200 lcd_printf("%u", NewID);  // Display the new ID on the LCD
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
;PCODE: $0000058F VOL: 0
; 0000 0201 delay_ms(1000);  // Delay for 1 second
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
; 0000 0202 lcd_clear();  // Clear the LCD display
;PCODE: $00000592 VOL: 0
; 0000 0203 lcd_printf("Enter-new PC: ");  // Prompt to enter the new password
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
; 0000 0204 lcd_gotoxy(0, 1);  // Set cursor to the second line of the LCD
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
;PCODE: $0000059C VOL: 0
;PCODE: $0000059D VOL: 0
; 0000 0205 ChangeAdminPasswords = (keypad() * 100) + (keypad() * 10) + keypad();  // Collect the new password
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
;PCODE: $000005A7 VOL: 0
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
;PCODE: $000005AC VOL: 0
; 0000 0206 lcd_printf("%u", ChangeAdminPasswords);  // Display the entered new password on the LCD
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
; 0000 0207 delay_ms(1000);  // Delay for 1 second
;PCODE: $000005B7 VOL: 0
;PCODE: $000005B8 VOL: 0
; 0000 0208 lcd_clear();  // Clear the LCD display
;PCODE: $000005B9 VOL: 0
; 0000 0209 EE_Write(NewID, ChangeAdminPasswords % 255);  // Write the lower byte of the new password to EEPROM
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
; 0000 020A EE_Write(NewID + 1, ChangeAdminPasswords / 255);  // Write the upper byte of the new password to EEPROM
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
; 0000 020B lcd_printf("Change");  // Display "Change" on the LCD
;PCODE: $000005C9 VOL: 0
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
;PCODE: $000005CF VOL: 0
; 0000 020C lcd_gotoxy(0, 1);  // Set cursor to the second line of the LCD
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
; 0000 020D lcd_printf("Successfully");  // Display "Successfully" on the LCD
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
;PCODE: $000005D9 VOL: 0
;PCODE: $000005DA VOL: 0
; 0000 020E delay_ms(1000);  // Delay for 1 second
;PCODE: $000005DB VOL: 0
;PCODE: $000005DC VOL: 0
; 0000 020F lcd_clear();  // Clear the LCD display
;PCODE: $000005DD VOL: 0
; 0000 0210 lcd_printf("Press * to enter");  // Prompt to press '*' to enter
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
; 0000 0211 } else {
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
; 0000 0212 lcd_clear();  // Clear the LCD display
;PCODE: $000005E7 VOL: 0
; 0000 0213 lcd_printf("Invalid ID");  // Display "Invalid ID" on the LCD
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
;PCODE: $000005EB VOL: 0
;PCODE: $000005EC VOL: 0
;PCODE: $000005ED VOL: 0
;PCODE: $000005EE VOL: 0
; 0000 0214 PORTD.5 = 1;  // Activate alarm
;PCODE: $000005EF VOL: 0
;PCODE: $000005F0 VOL: 0
; 0000 0215 delay_ms(1000);  // Delay for 1 second
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
; 0000 0216 PORTD.5 = 0;  // Deactivate alarm
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
; 0000 0217 delay_ms(1000);  // Delay for 1 second
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
; 0000 0218 PORTD.5 = 1;  // Activate alarm
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
; 0000 0219 delay_ms(1000);  // Delay for 1 second
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
; 0000 021A PORTD.5 = 0;  // Deactivate alarm
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
; 0000 021B delay_ms(1000);  // Delay for 1 second
;PCODE: $000005FD VOL: 0
;PCODE: $000005FE VOL: 0
; 0000 021C lcd_clear();  // Clear the LCD display
;PCODE: $000005FF VOL: 0
; 0000 021D lcd_printf("Press * to enter");  // Prompt to press '*' to enter
;PCODE: $00000600 VOL: 0
;PCODE: $00000601 VOL: 0
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
; 0000 021E delay_ms(1000);  // Delay for 1 second
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
; 0000 021F }
;PCODE: $00000609 VOL: 0
; 0000 0220 } else {
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
; 0000 0221 lcd_clear();  // Clear the LCD display
;PCODE: $0000060C VOL: 0
; 0000 0222 lcd_printf("Wrong password");  // Display "Wrong password" on the LCD
;PCODE: $0000060D VOL: 0
;PCODE: $0000060E VOL: 0
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
;PCODE: $00000611 VOL: 0
;PCODE: $00000612 VOL: 0
;PCODE: $00000613 VOL: 0
; 0000 0223 delay_ms(1000);  // Delay for 1 second
;PCODE: $00000614 VOL: 0
;PCODE: $00000615 VOL: 0
; 0000 0224 PORTD.5 = 1;  // Activate alarm
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
; 0000 0225 delay_ms(1000);  // Delay for 1 second
;PCODE: $00000618 VOL: 0
;PCODE: $00000619 VOL: 0
; 0000 0226 PORTD.5 = 0;  // Deactivate alarm
;PCODE: $0000061A VOL: 0
;PCODE: $0000061B VOL: 0
; 0000 0227 delay_ms(1000);  // Delay for 1 second
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
; 0000 0228 lcd_clear();  // Clear the LCD display
;PCODE: $0000061E VOL: 0
; 0000 0229 delay_ms(1000);  // Delay for 1 second
;PCODE: $0000061F VOL: 0
;PCODE: $00000620 VOL: 0
; 0000 022A ChangePasswordAdmin();  // Call the function recursively to re-enter the password
;PCODE: $00000621 VOL: 0
; 0000 022B }
;PCODE: $00000622 VOL: 0
; 0000 022C }
;PCODE: $00000623 VOL: 0
;PCODE: $00000624 VOL: 0
;interrupt [2] void ext0(void)
; 0000 0231 {
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
; 0000 0232 ChangePasswordAdmin();   // Call the function to change the password for Admin when Interrupt 0 (external interrupt 0) occurs
;PCODE: $00000627 VOL: 0
; 0000 0233 }
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
;interrupt [3] void  ext1(void)
; 0000 0236 {
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
; 0000 0237 ChangePasswordUser( ); // Call the function to change the password for User when Interrupt 1 (external interrupt 1) occurs
;PCODE: $0000062D VOL: 0
; 0000 0238 }
;PCODE: $0000062E VOL: 0
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
